trigger:
  branches:
    include:
      - main

pool:
  name: Default

variables:
  AWS_REGION: 'us-east-1'
  TF_VERSION: '1.4.0'
  TFLINT_VERSION: '0.46.1'
  TFSEC_VERSION: '1.28.1'

# ───────────── Stage 1: Terraform Plan ─────────────
stages:
- stage: TerraformPlan
  displayName: "Terraform Plan"
  jobs:
  - job: Plan
    displayName: "Terraform Init, Validate, Plan"
    steps:
    - checkout: self

    - task: AzureCLI@2
      displayName: "Login via Azure CLI"
      inputs:
        azureSubscription: 'MyAzureConnection'
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: echo "Logged in successfully"

    - script: |
        curl -o terraform.zip https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'

    - script: terraform init
      displayName: 'Terraform Init'
      workingDirectory: ./app-gateway

    - script: terraform validate
      displayName: 'Terraform Validate'
      workingDirectory: ./app-gateway

    - script: terraform plan -out=tfplan
      displayName: 'Terraform Plan'
      workingDirectory: ./app-gateway

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(System.DefaultWorkingDirectory)/app-gateway/tfplan'
        artifactName: tfplan-artifact
        publishLocation: Container

# ───────────── Stage 2: Terraform Apply ─────────────
- stage: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
  - deployment: Apply
    displayName: "Apply Terraform Changes"
    environment: approval-env  # 🔐 This requires manual approval
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: current
              downloadType: single
              artifactName: tfplan-artifact
              downloadPath: '$(System.DefaultWorkingDirectory)/tfplan-download'

          - script: |
              curl -o terraform.zip https://releases.hashicorp.com/terraform/$(TF_VERSION)/terraform_$(TF_VERSION)_linux_amd64.zip
              unzip terraform.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: 'Install Terraform'

          - script: |
              cp $(System.DefaultWorkingDirectory)/tfplan-download/tfplan ./tfplan
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'
            workingDirectory: ./app-gateway
